{"ast":null,"code":"import _classCallCheck from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/src/components/Contactform/Reactcontactform.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport classnames from 'classnames';\nvar formikEnhancer = withFormik({\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().min(1, \"Dat is een korte naam\").max(50, 'Veel te lang!').required('Uw voornaam is verplicht.'),\n    lastName: Yup.string().min(2, \"Dat is een korte naam\").max(50, 'Veel te lang!').required('Uw achternaam is verplicht.'),\n    email: Yup.string().email('Ongeldig email adres').max(50, 'Veel te lang!').required('Email is verplicht!'),\n    vraag: Yup.string().min(2, 'Vertel ons wat meer.').max(100, 'Veel te lang!').required('vraag is verplicht!')\n  }),\n  mapPropsToValues: function mapPropsToValues(_ref) {\n    var user = _ref.user;\n    return _objectSpread({}, user);\n  },\n  handleSubmit: function handleSubmit(payload, _ref2) {\n    var setSubmitting = _ref2.setSubmitting;\n    alert(payload.email + payload.vraag);\n    setSubmitting(false);\n    var user = {\n      name: payload.firstName + \" \" + payload.lastName,\n      email: payload.email,\n      vraag: payload.vraag\n    };\n    axios.post('', {\n      user: user\n    }).then(function (res) {\n      console.log(res.data);\n    });\n  },\n  displayName: 'MyForm'\n});\n\nvar InputFeedback = function InputFeedback(_ref3) {\n  var error = _ref3.error;\n  return error ? React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, error) : null;\n};\n\nvar Label = function Label(_ref4) {\n  var error = _ref4.error,\n      className = _ref4.className,\n      children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, [\"error\", \"className\", \"children\"]);\n\n  return React.createElement(\"label\", Object.assign({\n    className: \"label\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), children);\n};\n\nvar TextInput = function TextInput(_ref5) {\n  var type = _ref5.type,\n      id = _ref5.id,\n      label = _ref5.label,\n      error = _ref5.error,\n      value = _ref5.value,\n      onChange = _ref5.onChange,\n      className = _ref5.className,\n      props = _objectWithoutProperties(_ref5, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  var classes = classnames('input-group', {\n    'animated shake error': !!error\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: id,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({\n    id: id,\n    className: \"text-input\",\n    type: type,\n    value: value,\n    onChange: onChange\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nvar Textarea = function Textarea(_ref6) {\n  var type = _ref6.type,\n      id = _ref6.id,\n      label = _ref6.label,\n      error = _ref6.error,\n      value = _ref6.value,\n      onChange = _ref6.onChange,\n      className = _ref6.className,\n      props = _objectWithoutProperties(_ref6, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  var classes = classnames('input-group', {\n    'animated shake error': !!error\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: id,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, label), React.createElement(\"textarea\", Object.assign({\n    id: id,\n    className: \"text-input\",\n    value: value,\n    onChange: onChange\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n};\n\nvar MyForm = function MyForm(props) {\n  var values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleSubmit = props.handleSubmit,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"firstName\",\n    type: \"text\",\n    label: \"Voornaam\",\n    placeholder: \"Voornaam\",\n    error: touched.firstName && errors.firstName,\n    value: values.firstName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"lastName\",\n    type: \"text\",\n    label: \"Achternaam\",\n    placeholder: \"Achternaam\",\n    error: touched.lastName && errors.lastName,\n    value: values.lastName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    placeholder: \"Uw email adres\",\n    error: touched.email && errors.email,\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Textarea, {\n    id: \"vraag\",\n    label: \"Vraag\",\n    placeholder: \"Uw vraag \",\n    rows: \"4\",\n    cols: \"50\",\n    error: touched.vraag && errors.vraag,\n    value: values.vraag,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"outline\",\n    onClick: handleReset,\n    disabled: !dirty || isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Verzenden\"));\n};\n\nvar MyEnhancedForm = formikEnhancer(MyForm);\n\nvar Reactcontactform =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reactcontactform, _React$Component);\n\n  function Reactcontactform() {\n    _classCallCheck(this, Reactcontactform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Reactcontactform).apply(this, arguments));\n  }\n\n  _createClass(Reactcontactform, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"reactContact \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(MyEnhancedForm, {\n        user: {\n          email: '',\n          firstName: '',\n          lastName: '',\n          vraag: ''\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Reactcontactform;\n}(React.Component);\n\nexport default Reactcontactform;","map":{"version":3,"sources":["/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/src/components/Contactform/Reactcontactform.jsx"],"names":["React","axios","withFormik","Yup","classnames","formikEnhancer","validationSchema","object","shape","firstName","string","min","max","required","lastName","email","vraag","mapPropsToValues","user","handleSubmit","payload","setSubmitting","alert","name","post","then","res","console","log","data","displayName","InputFeedback","error","Label","className","children","props","TextInput","type","id","label","value","onChange","classes","Textarea","MyForm","values","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","MyEnhancedForm","Reactcontactform","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {withFormik} from 'formik';\nimport * as Yup from 'yup';\nimport classnames from 'classnames';\n\nconst formikEnhancer = withFormik({\n    validationSchema: Yup.object().shape({\n        firstName: Yup.string()\n                .min(1, \"Dat is een korte naam\")\n                .max(50, 'Veel te lang!')\n                .required('Uw voornaam is verplicht.'),\n        lastName : Yup.string()\n                .min(2, \"Dat is een korte naam\")\n                .max(50, 'Veel te lang!')\n                .required('Uw achternaam is verplicht.'),\n        email    : Yup.string()\n                .email('Ongeldig email adres')\n                .max(50, 'Veel te lang!')\n                .required('Email is verplicht!'),\n        vraag    : Yup.string()\n                .min(2, 'Vertel ons wat meer.')\n                .max(100, 'Veel te lang!')\n                .required('vraag is verplicht!'),\n    }),\n\n    mapPropsToValues: ({user}) => ({\n        ...user,\n    }),\n    handleSubmit    : (payload, {setSubmitting}) => {\n        alert(payload.email + payload.vraag);\n        setSubmitting(false);\n        const user = {\n            name: payload.firstName + \" \" + payload.lastName,\n            email: payload.email,\n            vraag: payload.vraag\n        };\n        axios.post('', {user})\n                .then(res => {\n\n                            console.log(res.data);\n                });\n    },\n    displayName     : 'MyForm',\n});\nconst InputFeedback = ({error}) =>\n        error ? <div className=\"input-feedback\">{error}</div> : null;\n\nconst Label = ({error, className, children, ...props}) => {\n    return (\n            <label className=\"label\" {...props}>\n                {children}\n            </label>\n    );\n};\nconst TextInput = ({type, id, label, error, value, onChange, className, ...props}) => {\n    const classes = classnames(\n            'input-group',\n            {\n                'animated shake error': !!error,\n            },\n            className\n    );\n    return (\n            <div className={classes}>\n                <Label htmlFor={id} error={error}>\n                    {label}\n                </Label>\n                <input\n                        id={id}\n                        className=\"text-input\"\n                        type={type}\n                        value={value}\n                        onChange={onChange}\n                        {...props}\n                />\n                <InputFeedback error={error}/>\n            </div>\n    );\n};\nconst Textarea = ({type, id, label, error, value, onChange, className, ...props}) => {\n    const classes = classnames(\n            'input-group',\n            {\n                'animated shake error': !!error,\n            },\n            className\n    );\n    return (\n            <div className={classes}>\n                <Label htmlFor={id} error={error}>\n                    {label}\n                </Label>\n                <textarea\n                        id={id}\n                        className=\"text-input\"\n                        value={value}\n                        onChange={onChange}\n                        {...props}\n                />\n                <InputFeedback error={error}/>\n            </div>\n    );\n};\nconst MyForm = props => {\n    const {\n              values,\n              touched,\n              errors,\n              dirty,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              handleReset,\n              isSubmitting,\n          } = props;\n    return (\n            <form onSubmit={handleSubmit}>\n                <TextInput\n                        id=\"firstName\"\n                        type=\"text\"\n                        label=\"Voornaam\"\n                        placeholder=\"Voornaam\"\n                        error={touched.firstName && errors.firstName}\n                        value={values.firstName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                />\n                <TextInput\n                        id=\"lastName\"\n                        type=\"text\"\n                        label=\"Achternaam\"\n                        placeholder=\"Achternaam\"\n                        error={touched.lastName && errors.lastName}\n                        value={values.lastName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                />\n                <TextInput\n                        id=\"email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        placeholder=\"Uw email adres\"\n                        error={touched.email && errors.email}\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                />\n                <Textarea\n                        id=\"vraag\"\n                        label=\"Vraag\"\n                        placeholder=\"Uw vraag \"\n                        rows=\"4\"\n                        cols=\"50\"\n                        error={touched.vraag && errors.vraag}\n                        value={values.vraag}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                />\n                <button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={handleReset}\n                        disabled={!dirty || isSubmitting}\n                >\n                    Reset\n                </button>\n                <button type=\"submit\" disabled={isSubmitting}>\n                    Verzenden\n                </button>\n            </form>\n    );\n};\nconst MyEnhancedForm = formikEnhancer(MyForm);\n\nclass Reactcontactform extends React.Component {\n\n    render() {\n        return (\n                <div className=\"reactContact \">\n                    <MyEnhancedForm user={{\n                        email    : '',\n                        firstName: '',\n                        lastName : '',\n                        vraag    : ''\n                    }}/>\n                </div>\n        );\n    }\n}\n\nexport default Reactcontactform;"]},"metadata":{},"sourceType":"module"}