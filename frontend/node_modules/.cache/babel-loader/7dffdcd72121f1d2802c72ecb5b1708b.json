{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/es6/objectWithoutProperties\";\nimport _inheritsLoose from \"@babel/runtime/helpers/es6/inheritsLoose\";\nimport _extends from \"@babel/runtime/helpers/es6/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport Dropdown from './Dropdown';\nimport SplitToggle from './SplitToggle';\nimport splitComponentProps from './utils/splitComponentProps';\n\nvar propTypes = _extends({}, Dropdown.propTypes, {\n  // Toggle props.\n  bsStyle: PropTypes.string,\n  bsSize: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * The content of the split button.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: PropTypes.node\n});\n\nvar SplitButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SplitButton, _React$Component);\n\n  function SplitButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = SplitButton.prototype;\n\n  _proto.render = function render() {\n    var _props = this.props,\n        bsSize = _props.bsSize,\n        bsStyle = _props.bsStyle,\n        title = _props.title,\n        toggleLabel = _props.toggleLabel,\n        children = _props.children,\n        props = _objectWithoutProperties(_props, [\"bsSize\", \"bsStyle\", \"title\", \"toggleLabel\", \"children\"]);\n\n    var _splitComponentProps = splitComponentProps(props, Dropdown.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        buttonProps = _splitComponentProps[1];\n\n    return React.createElement(Dropdown, _extends({}, dropdownProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(Button, _extends({}, buttonProps, {\n      disabled: props.disabled,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), title), React.createElement(SplitToggle, {\n      \"aria-label\": toggleLabel || title,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(Dropdown.Menu, null, children));\n  };\n\n  return SplitButton;\n}(React.Component);\n\nSplitButton.propTypes = propTypes;\nSplitButton.Toggle = SplitToggle;\nexport default SplitButton;","map":null,"metadata":{},"sourceType":"module"}