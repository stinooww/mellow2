{"ast":null,"code":"import _defineProperty from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/src/components/Contactform/Reactcontactform.jsx\";\nimport React, { Component } from 'react';\nimport Contact from \"../../pages/Contact/Contact\";\n\nvar Miniformik =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Miniformik, _React$Component);\n\n  function Miniformik() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Miniformik);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Miniformik)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      values: _this.props.initialValues || {},\n      touched: {},\n      errors: {}\n    };\n\n    _this.handleChange = function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      event.persist();\n\n      _this.setState(function (prevState) {\n        return {\n          values: _objectSpread({}, prevState, _defineProperty({}, name, value))\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Miniformik, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children(_objectSpread({}, this.state, {\n        handleChange: this.handleInputChange\n      }));\n    }\n  }]);\n\n  return Miniformik;\n}(React.Component);\n\nvar Reactcontactform =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Reactcontactform, _React$Component2);\n\n  function Reactcontactform() {\n    _classCallCheck(this, Reactcontactform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Reactcontactform).apply(this, arguments));\n  }\n\n  _createClass(Reactcontactform, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Miniformik, {\n        initialValues: {\n          isGoing: true,\n          numberOfGuests: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"// you pass a callback function to children or another prop and it gets executed during render\", function (_ref) {\n        var values = _ref.values,\n            handleChange = _ref.handleChange;\n        return React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Is going:\", React.createElement(\"input\", {\n          name: \"isGoing\",\n          type: \"checkbox\",\n          checked: values.isGoing,\n          onChange: handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Number of guests:\", React.createElement(\"input\", {\n          name: \"numberOfGuests\",\n          type: \"number\",\n          value: values.numberOfGuests,\n          onChange: handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return Reactcontactform;\n}(React.Component);\n\nexport default Reactcontactform;","map":{"version":3,"sources":["/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/src/components/Contactform/Reactcontactform.jsx"],"names":["React","Component","Contact","Miniformik","state","values","props","initialValues","touched","errors","handleChange","event","target","value","type","checked","name","persist","setState","prevState","children","handleInputChange","Reactcontactform","isGoing","numberOfGuests"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,6BAApB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWC,aAAX,IAA4B,EADlC;AAEFC,MAAAA,OAAO,EAAE,EAFP;AAGFC,MAAAA,MAAM,EAAE;AAHN,K;;UAONC,Y,GAAe,UAAAC,KAAK,EAAI;AACpB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,UAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACAL,MAAAA,KAAK,CAACM,OAAN;;AACA,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACxBd,UAAAA,MAAM,oBACCc,SADD,sBAEDH,IAFC,EAEMH,KAFN;AADkB,SAAL;AAAA,OAAvB;AAOH,K;;;;;;;6BACQ;AACL,aAAO,KAAKP,KAAL,CAAWc,QAAX,mBAAwB,KAAKhB,KAA7B;AACPM,QAAAA,YAAY,EAAE,KAAKW;AADZ,SAAP;AAEH;;;;EAxBoBrB,KAAK,CAACC,S;;IA2BzBqB,gB;;;;;;;;;;;;;6BAIO;AACL,aACQ,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAE;AACvBC,UAAAA,OAAO,EAAE,IADc;AAEvBC,UAAAA,cAAc,EAAE;AAFO,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAMK;AAAA,YAAEnB,MAAF,QAAEA,MAAF;AAAA,YAAUK,YAAV,QAAUA,YAAV;AAAA,eACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI;AACQ,UAAA,IAAI,EAAC,SADb;AAEQ,UAAA,IAAI,EAAC,UAFb;AAGQ,UAAA,OAAO,EAAEL,MAAM,CAACkB,OAHxB;AAIQ,UAAA,QAAQ,EAAEb,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEI;AACQ,UAAA,IAAI,EAAC,gBADb;AAEQ,UAAA,IAAI,EAAC,QAFb;AAGQ,UAAA,KAAK,EAAEL,MAAM,CAACmB,cAHtB;AAIQ,UAAA,QAAQ,EAAEd,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAVJ,CADP;AAAA,OANL,CADR;AA8BH;;;;EAnC0BV,KAAK,CAACC,S;;AAsCrC,eAAeqB,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport Contact from \"../../pages/Contact/Contact\";\n\nclass Miniformik extends React.Component{\n    state={\n        values: this.props.initialValues || {},\n        touched: {},\n        errors: { }\n    };\n\n\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        event.persist();\n        this.setState(prevState => ({\n            values: {\n                ...prevState,\n                [name]: value,\n\n                },\n        }));\n    };\n    render() {\n        return this.props.children({...this.state,\n        handleChange: this.handleInputChange});\n    }\n}\n\nclass Reactcontactform extends React.Component {\n\n\n\n    render() {\n        return (\n                <Miniformik initialValues={{\n                    isGoing: true,\n                    numberOfGuests: 2\n                }}>\n\n// you pass a callback function to children or another prop and it gets executed during render\n                    {({values, handleChange}) => (\n                            <form>\n                                <label>\n                                    Is going:\n                                    <input\n                                            name=\"isGoing\"\n                                            type=\"checkbox\"\n                                            checked={values.isGoing}\n                                            onChange={handleChange}/>\n                                </label>\n                                <br/>\n                                <label>\n                                    Number of guests:\n                                    <input\n                                            name=\"numberOfGuests\"\n                                            type=\"number\"\n                                            value={values.numberOfGuests}\n                                            onChange={handleChange}/>\n                                </label>\n                            </form> )\n                    }\n                </Miniformik>\n        );\n    }\n}\n\nexport default Reactcontactform;"]},"metadata":{},"sourceType":"module"}