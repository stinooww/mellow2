{"ast":null,"code":"import _classCallCheck from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/src/components/Contactform/Reactcontactform.jsx\";\nimport React from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport classnames from 'classnames';\nvar formikEnhancer = withFormik({\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().min(1, \"Dat is een korte naam\").max(50, 'Veel te lang!').required('Uw voornaam is verplicht.'),\n    lastName: Yup.string().min(2, \"Dat is een korte naam\").max(50, 'Veel te lang!').required('Uw achternaam is verplicht.'),\n    email: Yup.string().email('Ongeldig email adres').max(50, 'Veel te lang!').required('Email is verplicht!'),\n    vraag: Yup.string().min(2, 'Vertel ons wat meer.').max(100, 'Veel te lang!').required('vraag is verplicht!')\n  }),\n  mapPropsToValues: function mapPropsToValues(_ref) {\n    var user = _ref.user;\n    return _objectSpread({}, user);\n  },\n  handleSubmit: function handleSubmit(payload, _ref2) {\n    var setSubmitting = _ref2.setSubmitting;\n    alert(payload.email + payload.vraag);\n    setSubmitting(false);\n  },\n  displayName: 'MyForm'\n});\n\nvar InputFeedback = function InputFeedback(_ref3) {\n  var error = _ref3.error;\n  return error ? React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, error) : null;\n};\n\nvar Label = function Label(_ref4) {\n  var error = _ref4.error,\n      className = _ref4.className,\n      children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, [\"error\", \"className\", \"children\"]);\n\n  return React.createElement(\"label\", Object.assign({\n    className: \"label\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), children);\n};\n\nvar TextInput = function TextInput(_ref5) {\n  var type = _ref5.type,\n      id = _ref5.id,\n      label = _ref5.label,\n      error = _ref5.error,\n      value = _ref5.value,\n      onChange = _ref5.onChange,\n      className = _ref5.className,\n      props = _objectWithoutProperties(_ref5, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  var classes = classnames('input-group', {\n    'animated shake error': !!error\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: id,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({\n    id: id,\n    className: \"text-input\",\n    type: type,\n    value: value,\n    onChange: onChange\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nvar Textarea = function Textarea(_ref6) {\n  var type = _ref6.type,\n      id = _ref6.id,\n      label = _ref6.label,\n      error = _ref6.error,\n      value = _ref6.value,\n      onChange = _ref6.onChange,\n      className = _ref6.className,\n      props = _objectWithoutProperties(_ref6, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  var classes = classnames('input-group', {\n    'animated shake error': !!error\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: id,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, label), React.createElement(\"textarea\", Object.assign({\n    id: id,\n    className: \"text-input\",\n    value: value,\n    onChange: onChange\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n};\n\nvar MyForm = function MyForm(props) {\n  var values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleSubmit = props.handleSubmit,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"firstName\",\n    type: \"text\",\n    label: \"First Name\",\n    placeholder: \"Voornaam\",\n    error: touched.firstName && errors.firstName,\n    value: values.firstName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"lastName\",\n    type: \"text\",\n    label: \"Last Name\",\n    placeholder: \"Achternaam\",\n    error: touched.lastName && errors.lastName,\n    value: values.lastName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    placeholder: \"Enter uw email adres\",\n    error: touched.email && errors.email,\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Textarea, {\n    id: \"vraag\",\n    label: \"vraag\",\n    placeholder: \"Uw vraag \",\n    rows: \"4\",\n    cols: \"50\",\n    error: touched.vraag && errors.vraag,\n    value: values.vraag,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"outline\",\n    onClick: handleReset,\n    disabled: !dirty || isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar MyEnhancedForm = formikEnhancer(MyForm);\n\nvar Reactcontactform =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reactcontactform, _React$Component);\n\n  function Reactcontactform() {\n    _classCallCheck(this, Reactcontactform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Reactcontactform).apply(this, arguments));\n  }\n\n  _createClass(Reactcontactform, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"reactContact \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(MyEnhancedForm, {\n        user: {\n          email: '',\n          firstName: '',\n          lastName: '',\n          vraag: ''\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Reactcontactform;\n}(React.Component);\n\nexport default Reactcontactform;","map":{"version":3,"sources":["/Users/stijnheynderickx/IdeaProjects/mellow2/frontend/src/components/Contactform/Reactcontactform.jsx"],"names":["React","withFormik","Yup","classnames","formikEnhancer","validationSchema","object","shape","firstName","string","min","max","required","lastName","email","vraag","mapPropsToValues","user","handleSubmit","payload","setSubmitting","alert","displayName","InputFeedback","error","Label","className","children","props","TextInput","type","id","label","value","onChange","classes","Textarea","MyForm","values","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","MyEnhancedForm","Reactcontactform","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport classnames from 'classnames';\n\n\n\n\n\n    const formikEnhancer = withFormik({\n        validationSchema: Yup.object().shape({\n            firstName: Yup.string()\n                    .min(1, \"Dat is een korte naam\")\n                    .max(50, 'Veel te lang!')\n                    .required('Uw voornaam is verplicht.'),\n            lastName: Yup.string()\n                    .min(2, \"Dat is een korte naam\")\n                    .max(50, 'Veel te lang!')\n                    .required('Uw achternaam is verplicht.'),\n            email: Yup.string()\n                    .email('Ongeldig email adres')\n                    .max(50, 'Veel te lang!')\n                    .required('Email is verplicht!'),\n            vraag: Yup.string()\n                    .min(2,'Vertel ons wat meer.')\n                    .max(100, 'Veel te lang!')\n                    .required('vraag is verplicht!'),\n        }),\n\n        mapPropsToValues: ({ user }) => ({\n            ...user,\n        }),\n        handleSubmit: (payload, { setSubmitting }) => {\n            alert(payload.email + payload.vraag);\n            setSubmitting(false);\n        },\n        displayName: 'MyForm',\n    });\n    const InputFeedback = ({ error }) =>\n            error ? <div className=\"input-feedback\">{error}</div> : null;\n\n    const Label = ({ error, className, children, ...props }) => {\n        return (\n                <label className=\"label\" {...props}>\n                    {children}\n                </label>\n        );\n    };\n    const TextInput = ({ type, id, label, error, value, onChange, className, ...props }) => {\n        const classes = classnames(\n                'input-group',\n                {\n                    'animated shake error': !!error,\n                },\n                className\n        );\n        return (\n                <div className={classes}>\n                    <Label htmlFor={id} error={error}>\n                        {label}\n                    </Label>\n                    <input\n                            id={id}\n                            className=\"text-input\"\n                            type={type}\n                            value={value}\n                            onChange={onChange}\n                            {...props}\n                    />\n                    <InputFeedback error={error} />\n                </div>\n        );\n    };\n    const Textarea = ({ type, id, label, error, value, onChange, className, ...props }) => {\n        const classes = classnames(\n                'input-group',\n                {\n                    'animated shake error': !!error,\n                },\n                className\n        );\n        return (\n                <div className={classes}>\n                    <Label htmlFor={id} error={error}>\n                        {label}\n                    </Label>\n                    <textarea\n                            id={id}\n                            className=\"text-input\"\n\n                            value={value}\n                            onChange={onChange}\n                            {...props}\n                    />\n                    <InputFeedback error={error} />\n                </div>\n        );\n    };\n    const MyForm = props => {\n        const {   values,\n                  touched,\n                  errors,\n                  dirty,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  handleReset,\n                  isSubmitting,\n              } = props;\n        return (\n                <form onSubmit={handleSubmit}>\n                    <TextInput\n                            id=\"firstName\"\n                            type=\"text\"\n                            label=\"First Name\"\n                            placeholder=\"Voornaam\"\n                            error={touched.firstName && errors.firstName}\n                            value={values.firstName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                    />\n                    <TextInput\n                            id=\"lastName\"\n                            type=\"text\"\n                            label=\"Last Name\"\n                            placeholder=\"Achternaam\"\n                            error={touched.lastName && errors.lastName}\n                            value={values.lastName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                    />\n                    <TextInput\n                            id=\"email\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"Enter uw email adres\"\n                            error={touched.email && errors.email}\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                    />\n                    <Textarea\n                            id=\"vraag\"\n                            label=\"vraag\"\n                            placeholder=\"Uw vraag \"\n                            rows=\"4\"\n                            cols=\"50\"\n                            error={touched.vraag && errors.vraag}\n                            value={values.vraag}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                    />\n                    <button\n                            type=\"button\"\n                            className=\"outline\"\n                            onClick={handleReset}\n                            disabled={!dirty || isSubmitting}\n                    >\n                        Reset\n                    </button>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                    </button>\n\n                </form>\n        );\n    };\nconst MyEnhancedForm = formikEnhancer(MyForm);\nclass Reactcontactform extends React.Component {\n\n\n\n\n    render() {\n        return (\n                <div className=\"reactContact \">\n                    <MyEnhancedForm user={{ email: '', firstName: '', lastName: '', vraag:'' }} />\n\n                </div>\n        );\n    }\n}\n\nexport default Reactcontactform;"]},"metadata":{},"sourceType":"module"}